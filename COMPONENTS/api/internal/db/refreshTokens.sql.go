// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: refreshTokens.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertRefreshToken = `-- name: InsertRefreshToken :one
INSERT INTO refresh_tokens
(
    token,
    user_id,
    expiry_date
)
VALUES
($1, $2, $3)
RETURNING id, token, user_id, expiry_date, created_at, modified_at
`

type InsertRefreshTokenParams struct {
	Token      string
	UserID     int32
	ExpiryDate pgtype.Timestamp
}

type InsertRefreshTokenRow struct {
	ID         int32
	Token      string
	UserID     int32
	ExpiryDate pgtype.Timestamp
	CreatedAt  pgtype.Timestamp
	ModifiedAt pgtype.Timestamp
}

func (q *Queries) InsertRefreshToken(ctx context.Context, arg InsertRefreshTokenParams) (InsertRefreshTokenRow, error) {
	row := q.db.QueryRow(ctx, insertRefreshToken, arg.Token, arg.UserID, arg.ExpiryDate)
	var i InsertRefreshTokenRow
	err := row.Scan(
		&i.ID,
		&i.Token,
		&i.UserID,
		&i.ExpiryDate,
		&i.CreatedAt,
		&i.ModifiedAt,
	)
	return i, err
}
