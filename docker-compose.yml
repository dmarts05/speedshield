services:
  db:
    build:
      context: ./COMPONENTS/db
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:4
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "migrate -path /migrations -database postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable up"
    volumes:
      - ./COMPONENTS/api/misc/migrations:/migrations
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      target: production
      context: ./COMPONENTS/api
      dockerfile: Dockerfile
    environment:
      - API_PORT=${API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - migrate

volumes:
  data:
